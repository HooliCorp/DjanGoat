IMPORT io.shiftleft/default
IMPORT io.shiftleft/defaultdict

################################
# Sinks that are protected by Rapid7 tcell
################################
###############################################################################
# Category Open Redirect #
###############################################################################
IO tcell_protected = METHOD -f "django.shortcuts.redirect:typing.Union[django.http.response.HttpResponseRedirect,django.http.response.HttpResponsePermanentRedirect](to:typing.Union[typing.Callable,builtins.str,django.shortcuts.SupportsGetAbsoluteUrl],*args:typing.Any,permanent:builtins.bool,**kwargs:typing.Any)" { INST "DESCRIPTOR_USE", PAR -i 1 "SINK", PAR -i 2 "SINK", PAR -i 4 "SINK" }

CONCLUSION open-redirect-tcell = FLOW IO (http OR $http) -> DATA (NOT escaped AND NOT numeric) -> IO (tcell_protected) -> IO ((http OR $http) AND redirect)
WHEN CONCLUSION open-redirect-tcell => EMIT {
  title: "Open Redirect: HTTP Request parameters are used in HTTP redirects {{via `$paramname`}} {{in `$methodname`}}",
  description: "HTTP Request parameters are not escaped and used in a HTTP redirect. This indicates an open redirect which can be exploited by an attacker to launch phishing attacks and/or steal sensitive data.

## Rapid7 tCell protection

Open Redirect detection is part of tCell's App Firewall feature and is enabled by default. Your application is only allowed to redirect to domains in the Allowed Domains list. All of the observed redirect attempts, successful or not, are in the Excluded Domains list. If the HTTP Redirect feature is set to Block and Report then the attempt would be blocked.

**[HTTP Redirect Detection](https://docs.tcell.io/docs/http-redirect)**

## Countermeasures

 This vulnerability can be prevented by ensuring that users cannot arbitrarily control where your page redirects them to.

## Additional information

**[CWE-601](https://cwe.mitre.org/data/definitions/601.html)**

**[OWASP-A1](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A1-Injection)**",
  category: "a1-injection",
  score: "2.0",
  vulnerability_description: "Open Redirect (Protected)",
  owasp_link: "https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A1-Injection",
  link: "https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A1-Injection",
  cwe_link: "https://cwe.mitre.org/data/definitions/601.html",
  cwe_category: "601"
}

###############################################################################
# Category SQL Injection #
###############################################################################
IO tcell_protected = METHOD -f "os.system:builtins.int(command:os.AnyPath)" { PAR -i 1 "SINK" }

CONCLUSION sql-injection-attacker-controlled-tcell = FLOW DATA (NOT encrypted AND NOT hashed AND NOT encoded AND NOT escaped AND NOT numeric) -> IO (tcell_protected) -> IO (sql)
WHEN CONCLUSION sql-injection-attacker-controlled-tcell => EMIT {
  title: "SQL Injection: Attacker-controlled data to SQL database {{via `$paramname`}} {{in `$methodname`}}",
  description: "Attacker controlled data is used in a SQL query without undergoing escaping or validation. This could allow an attacker to read sensitive data from the database, modify its content or gain control over the server.

## Rapid7 tCell protection

SQL injection detection is part of tCell's App Firewall feature and is enabled by default. To verify that it's enabled, log in to your tCell console and go to Policies > App Firewall. Ensure that Enabled is checked for the App Firewall and ensure that Enabled is checked under the SQL Injection category.

**[SQL Injection Protection](https://docs.tcell.io/docs/sql-injection)**

## Countermeasures

This vulnerability can be prevented by using prepared statements on the attacker-controlled data.

## Additional information

**[CWE-89](https://cwe.mitre.org/data/definitions/89.html)**

**[OWASP-A1](https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A1-Injection)**",
  category: "a1-injection",
  score: "2.0",
  vulnerability_description: "SQL Injection (Protected)",
  owasp_link: "https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A1-Injection",
  link: "https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A1-Injection",
  cwe_link: "https://cwe.mitre.org/data/definitions/89.html",
  cwe_category: "89"
}
